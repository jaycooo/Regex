Regex User Verification

The purpose of this tutorial is to explain what regex(regular expressions) are and how we use them when trying to obatain and verify certain user information. This makes it easy to quickly validate a user and either provide them access or deny the access. I have an example code listed below that can be used to identify the user. I have a walk through below of how to use this regex expression

## Summary

The code listed below will allow the verification of a user by the user name 
Matching username /^([a-z0-9_\.-])([\da-z\.-])$/

## Table of Contents

- [Anchors](#anchors)
- [Quantifiers](#quantifiers)
- [OR Operator](#or-operator)
- [Character Classes](#character-classes)
- [Flags](#flags)
- [Grouping and Capturing](#grouping-and-capturing)
- [Bracket Expressions](#bracket-expressions)
- [Greedy and Lazy Match](#greedy-and-lazy-match)
- [Boundaries](#boundaries)
- [Back-references](#back-references)
- [Look-ahead and Look-behind](#look-ahead-and-look-behind)

## Regex Components

Anchors
 The starts and ends the regualar expression with specific criteria 

Quantifiers
This will be used to count how many times a specific character needs to match 

OR operator
This can be used to match characters or expression of either the left or the right 
/^([a-z0-9_\.-])([\da-z\.-])$/

Character Classes
These are a set of characters enclosed within a square bracket it specifies that the characters will match a single character from an input string
\d

Flags
An expression that consists of pattern and optional flags. Without flags and special symbols the search by a regex expression would be the same as a substring search

Grouping and Capturing
This is a way to group and treat multiple characters as a single unit. They are created by placing the characters grouped inside a set of parentheses
([a-z0-9_\.-])

Bracket Expression
This matches the specific set of characters and may match collating elements 
([a-z0-9_\.-])

Greedy and lazy match
This expression meand they match as much as they can and only give back when necessary to match the remainder of the regex

Boundaries
This is the postion between \w and \W at the begining or end of a string it functions similar to the dollars sign by creating a boundary

Back References
Are regular expression commands which refer to a previous part of the matched regualr expression

Look Ahead and Look Behind
This is to look ahead or behind to match a certain order 

Author Julia Coronado 

This was created by Julia Coronado contact information below 
https://github.com/jaycooo/